[build-system]
requires = ["scikit-build-core>=0.9", "pybind11>=2.11"]
build-backend = "scikit_build_core.build"

[project]
name = "epiclibcpp"
version = "0.0.0"
description = "EPIC cognitive architecture C++ core exposed as a Python module via pybind11"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Travis Seymour" }]
license = { file = "LICENSE" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: C++",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/travisseymour/epiclibcpp"

[tool.scikit-build]
# Keep using your existing CMakeLists.txt and flags.
# We don't hard-pin CMAKE args here; cibuildwheel supplies them via env per-OS.
wheel.expand-macos-universal-tags = false

[tool.scikit-build.cmake]
# Leave blank; flags come from your scripts/CMake + CI env
